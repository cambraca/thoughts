<?php

/**
 * Gets a list of words from the text.
 * Removes stopwords and short words, and returns only lower case.
 * Also, change the words to their root, for example "words" to "word" (stemming).
 * Words may be repeated in the return array.
 * The array has the same order as the original text.
 * @param string $text
 * @param string $language
 * @return array
 */
function languageutil_get_words_from_text($text, $language) {
  global $languageutil_stopwords;
  _languageutil_load_stopwords($language);
  
  preg_match_all('/([a-zA-Z]|\xC3[\x80-\x96\x98-\xB6\xB8-\xBF]|\xC5[\x92\x93\xA0\xA1\xB8\xBD\xBE]){3,}/', $text, $match_arr);
  $words = $match_arr[0];
  
  $ret = array();
  foreach ($words as $word) {
    $word = strtolower($word);
    if (array_key_exists($language, $languageutil_stopwords) && in_array($word, $languageutil_stopwords[$language]))
      continue;
    if (function_exists('stemword'))
      $word = stemword($word, $language, 'UTF_8');
    $ret[] = $word;
  }
  
  return $ret;
}

function _languageutil_load_stopwords($language) {
  global $languageutil_stopwords;
  
  if (!is_array($languageutil_stopwords))
    $languageutil_stopwords = array();
  elseif (array_key_exists($language, $languageutil_stopwords))
    return;
  
  $filename = drupal_get_path('module', 'languageutil').DIRECTORY_SEPARATOR.'stopwords'.DIRECTORY_SEPARATOR.$language.'.txt';
  if (file_exists($filename)) {
    $languageutil_stopwords[$language] = explode("\r\n", file_get_contents($filename));
  }
}